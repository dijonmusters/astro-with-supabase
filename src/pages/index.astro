---
import { createClient } from "../utils/supabase/server";
import astroLogoReference from "./astro-logo.svg";
import supabaseLogoReference from "./supabase-logo.svg";

const supabase = createClient(Astro);

const {
  data: { user },
} = await supabase.auth.getUser();

const { data: notes } = await supabase.from("notes").select();
---

<main
  class="min-h-screen bg-neutral-900 text-neutral-100 flex flex-col items-center"
>
  <div class="w-full flex flex-col items-center">
    <nav class="w-full flex justify-center border-b border-b-neutral-800 h-16">
      <div
        class="w-full max-w-4xl flex justify-end items-center p-3 text-sm text-neutral-100"
      >
        <div>
          {
            user ? (
              <div class="flex items-center gap-4">
                Hey, {user.email}!
                <form action="/auth/sign-out" method="post">
                  <button class="py-2 px-4 rqounded-md no-underline bg-neutral-900 hover:bg-neutral-800">
                    Logout
                  </button>
                </form>
              </div>
            ) : (
              <a
                href="/login"
                class="py-2 px-4 rounded-md no-underline bg-neutral-900 hover:bg-neutral-800"
              >
                Login
              </a>
            )
          }
        </div>
      </div>
    </nav>
    <div
      class="flex flex-col gap-14 max-w-4xl px-3 py-16 lg:py-24 text-neutral-100"
    >
      <div class="flex flex-col items-center mb-4 lg:mb-12">
        <div class="flex gap-8 justify-center items-center">
          <a href="https://supabase.com/" target="_blank">
            <img
              class="h-14"
              src={supabaseLogoReference.src}
              alt="Supabase Logo"
            />
          </a>
          <span class="border-l rotate-45 h-6"></span>
          <a href="https://astro.build" target="_blank">
            <img class="h-16" src={astroLogoReference.src} alt="Astro Logo" />
          </a>
        </div>
        <h1 class="sr-only">Supabase and Astro Starter Template</h1>
        <p
          class="text-3xl lg:text-4xl !leading-tight mx-auto max-w-xl text-center mt-16 mb-20"
        >
          The fastest way to start building apps with{" "}
          <strong>Supabase</strong> and <strong>Astro</strong>
        </p>
        {
          user && (
            <form
              action="/new-note"
              method="post"
              class="w-full flex flex-col gap-6 p-6 mb-16 border rounded-md border-neutral-700"
            >
              <textarea
                id="message"
                rows="4"
                class="block p-4 w-full text-sm text-neutral-100 bg-neutral-800 rounded-md border-0 focus:ring-blue-500 focus:border-blue-500"
                placeholder="Write your new note here..."
                id="title"
                name="title"
                autofocus
              />
              <div class="flex items-center">
                <input
                  id="public"
                  name="public"
                  type="checkbox"
                  value="public"
                />
                <label
                  for="public"
                  class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300"
                >
                  Make this note{" "}
                  <span class=" bg-blue-900 rounded-md px-2 py-1">public</span>{" "}
                  so others can see it too
                </label>
              </div>
              <button class="bg-indigo-900 px-6 py-2 rounded-md self-end">
                Add
              </button>
            </form>
          )
        }
        <div class="w-full bg-neutral-800 rounded-md">
          {
            notes?.map((note) => (
              <div class="p-8 b border-b border-neutral-700 last:border-b-0 relative justify-between items-center">
                {note.title}
                <span class="flex gap-2 text-xs text-neutral-300 mt-2">
                  {user?.id === note.author_id && (
                    <span class=" bg-teal-900 rounded-md px-2 py-1">
                      Author
                    </span>
                  )}
                  {note.is_public && (
                    <span class=" bg-blue-900 rounded-md px-2 py-1">
                      Public
                    </span>
                  )}
                </span>
              </div>
            ))
          }
        </div>
        {
          user ? (
            <p class="mt-4 self-start text-xs text-neutral-400">
              You are authenticated so you can see your notes as well as those
              that are{" "}
              <span class=" bg-blue-900 rounded-md px-2 py-1 inline-flex text-neutral-300 text-xs">
                Public
              </span>
            </p>
          ) : (
            <p class="mt-4 self-start text-xs text-neutral-400">
              You are not authenticated so can only see{" "}
              <span class="bg-blue-900 rounded-md px-2 py-1 inline-flex text-neutral-300 text-xs">
                Public
              </span>{" "}
              notes.{" "}
              <a class="font-bold" href="/login">
                Login
              </a>{" "}
              to write your own notes.
            </p>
          )
        }
      </div>

      <div
        class="w-full p-[1px] bg-gradient-to-r from-transparent via-neutral-800 to-transparent"
      >
      </div>

      <div class="flex justify-center text-center text-xs">
        <p>
          Powered by{" "}
          <a href="https://supabase.com/" target="_blank" class="font-bold">
            Supabase
          </a>
        </p>
      </div>
    </div>
  </div>
</main>
